name: Add ISO3 and Update Geodata

on:
  workflow_dispatch:
    inputs:
      iso3:
        description: 'ISO3 country code to add'
        required: true
        type: string
      stage:
        description: 'Environment stage'
        required: true
        type: choice
        options:
            - dev
            - prod
        default: 'dev'

jobs:
  update-iso3-and-geodata:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      # Create a unique branch name using the ISO3 code and stage
      - name: Create branch name
        id: branch-name
        run: echo "branch=add-${{ github.event.inputs.iso3 }}-${{ github.event.inputs.stage }}" >> $GITHUB_OUTPUT

      # Create a new branch
      - name: Create new branch
        run: git checkout -b ${{ steps.branch-name.outputs.branch }}

      # Update the iso3.txt file to add the new ISO3 code
      - name: Update iso3.txt with new ISO3 code
        id: update-config
        run: python pipelines/update_iso3.py ${{ github.event.inputs.iso3 }}

      # Run the geodata download script
      # Will write to the database and read from Azure blob
      - name: Run geodata download script
        env:
            DSCI_AZ_BLOB_DEV_SAS: ${{ secrets.DSCI_AZ_BLOB_DEV_SAS }}
            DSCI_AZ_BLOB_PROD_SAS: ${{ secrets.DSCI_AZ_BLOB_PROD_SAS }}
            DSCI_AZ_DB_DEV_PW_WRITE: ${{ secrets.DSCI_AZ_DB_DEV_PW_WRITE }}
            DSCI_AZ_DB_PROD_PW_WRITE: ${{ secrets.DSCI_AZ_DB_PROD_PW_WRITE }}
            DSCI_AZ_DB_PROD_UID_WRITE: ${{ secrets.DSCI_AZ_DB_PROD_UID_WRITE }}
            DSCI_AZ_DB_DEV_UID_WRITE: ${{ secrets.DSCI_AZ_DB_DEV_UID_WRITE }}
            DSCI_AZ_DB_DEV_HOST: "chd-rasterstats-dev.postgres.database.azure.com"
            DSCI_AZ_DB_PROD_HOST: "chd-rasterstats-prod.postgres.database.azure.com"
            STAGE: ${{ github.event.inputs.stage }}
        run: python pipelines/download_geodata.py

      # Check if there are any changes
      - name: Check for changes
        id: git-status
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Files changed:"
            git status --porcelain
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          fi

      # Configure Git
      - name: Configure Git
        if: steps.git-status.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      # Commit changes - Using git status to determine what to add
      - name: Commit changes
        if: steps.git-status.outputs.changes == 'true'
        run: |
          # First add any files within the pipelines directory that have changes
          git ls-files --modified --others --exclude-standard pipelines/ | xargs -r git add

          # Then add any files within the assets directory that have changes
          git ls-files --modified --others --exclude-standard assets/ | xargs -r git add

          # Commit the changes
          git commit -m "Add ISO3 ${{ github.event.inputs.iso3 }} (${{ github.event.inputs.stage }}) and update geodata"

      # Push changes
      - name: Push changes
        if: steps.git-status.outputs.changes == 'true'
        run: git push origin ${{ steps.branch-name.outputs.branch }}

      # Create pull request using a separate action - not the peter-evans one which is having issues
      - name: Create Pull Request
        if: steps.git-status.outputs.changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "Add ISO3 ${{ github.event.inputs.iso3 }} and update geodata (${{ github.event.inputs.stage }})" \
            --body "This PR adds the ISO3 code \`${{ github.event.inputs.iso3 }}\` to the configuration and updates the corresponding geodata assets for the \`${{ github.event.inputs.stage }}\` environment.

            ## Changes:
            - Added ISO3 code \`${{ github.event.inputs.iso3 }}\` to iso3.txt
            - Updated geojson files in the assets directory

            Please review the changes carefully before merging." \
            --base main \
            --label "geodata-update,${{ github.event.inputs.stage }}"

      # If no changes were made, output a message
      - name: No changes required
        if: steps.git-status.outputs.changes == 'false'
        run: echo "No changes were made to the repository. Either the ISO3 already existed or no geodata was updated."
